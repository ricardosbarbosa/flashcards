# The following types define the data model of the example service
# based on which the GraphQL API is generated
enum UserRole {
  EDITOR,
  MODERATOR,
  ADMIN
}

enum AccessGroupOperation {
  READ,
  UPDATE,
  DELETE
}

type User @model {
  id: ID! @isUnique
  name: String!
  dateOfBirth: DateTime

  # Uncomment below - you can declare relations between models like this
  decks: [Deck!]! @relation(name: "UserDecks")
}

type Question @model {
  # Required system field
  id: ID! @isUnique # read-only (managed by Graphcool)

  # Optional system fields (remove if not needed)
  createdAt: DateTime! # read-only (managed by Graphcool)
  updatedAt: DateTime! # read-only (managed by Graphcool)

  question: String!
  answer: String!

  deck: Deck! @relation(name: "DeckQuestions")
}

type Deck @model {
  # Required system field
  id: ID! @isUnique # read-only (managed by Graphcool)

  # Optional system fields (remove if not needed)
  createdAt: DateTime! # read-only (managed by Graphcool)
  updatedAt: DateTime! # read-only (managed by Graphcool)

  title: String!
  questions: [Question!]! @relation(name: "DeckQuestions")
  owner: User! @relation(name: "UserDecks")
}

